#ifndef __RESOURCE_HANDLER__
#define __RESOURCE_HANDLER__

#include <fstream>
#include <limits>
#include <sys/sysinfo.h>

#include "message.hpp"
#include "msg_handler.hpp"

static uint64_t get_mem_total()
{
    std::string token;
    std::ifstream file("/proc/meminfo");
    while(file >> token) {
        if(token == "MemTotal:") {
            unsigned long mem;
            if(file >> mem) {
                return mem;
            } else {
                return 0;       
            }
        }
       
        file.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
    }
    return (0);
}

class ResourceHandler : public MsgHandler
{
public:
    void processMsg(const Message& m, Connection *src, Connection *rcv)
    {
	uint64_t mem = get_mem_total();
	Message rsp(&mem, sizeof(mem));
	rcv->write(rsp);

	
    }
    
    
};


#endif
